plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.neoforged.gradle.userdev' version '7.0.74'
    id 'java-library'
    id 'eclipse'
    id 'idea'
}

configurations {
    shade
    implementation.extendsFrom shade
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)


// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:20.4.153-beta"
    shade project(':spark-common')
}
tasks.withType(ProcessResources).configureEach {

    var replaceProperties = [
            pluginVersion: project.pluginVersion,
            pluginDescription: project.pluginDescription
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }

}

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

shadowJar {
    archiveFileName = "spark-${project.pluginVersion}-neoforge.jar"
    configurations = [project.configurations.shade]

    relocate 'net.kyori.adventure', 'me.lucko.spark.lib.adventure'
    relocate 'net.kyori.examination', 'me.lucko.spark.lib.adventure.examination'
    relocate 'net.bytebuddy', 'me.lucko.spark.lib.bytebuddy'
    relocate 'com.google.protobuf', 'me.lucko.spark.lib.protobuf'
    relocate 'org.objectweb.asm', 'me.lucko.spark.lib.asm'
    relocate 'one.profiler', 'me.lucko.spark.lib.asyncprofiler'
    relocate 'me.lucko.bytesocks.client', 'me.lucko.spark.lib.bytesocks'
    relocate 'org.java_websocket', 'me.lucko.spark.lib.bytesocks.ws'

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
}

artifacts {
    archives shadowJar
    shadow shadowJar
}


tasks.withType(JavaCompile).configureEach {
    options.release = 17
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
